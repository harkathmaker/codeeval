# https://www.codeeval.com/open_challenges/36/
import sys

offsets = [sum([2**(i+1)-1 for i in range(k)]) for k in range(int('111',2))]

def decodeString(input,start):
    idx = min(input.index('0',start),input.index('1',start))
    header = input[start:idx]
    message = ''
    while input[idx:idx+3] != '000':
        letterLength = int(input[idx:idx+3],2)
        idx += 3
        nextCode = input[idx:idx+letterLength]
        while nextCode != '1'*letterLength:
            message += header[offsets[letterLength-1]+int(nextCode,2)]
            idx += letterLength
            nextCode = input[idx:idx+letterLength]
        idx += letterLength
    idx += 3
    # Return decoded string and index of start of next message
    return message, idx

def main():
    with open(sys.argv[1],'r') as f:
        s = f.read()
        input = s.replace('\n','')
        msg, idx = decodeString(input,0)
        print msg
        while idx < len(input):
            msg,idx = decodeString(input,idx)
            print msg

if __name__ == '__main__':
    main()
