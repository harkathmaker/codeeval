# https://www.codeeval.com/open_challenges/46/

import sys

# Makes a list of primes up to a given number n.
def findPrimes(n):
    marked = [False] * (n/2)
    # Mark with sieve of Eratosthenes
    p = 3
    root = int(n**0.5)+1
    while p < root:
        k = p + (p-1)/2
        while k < n/2:
            marked[k] = True
            k += p
        p += 2
        while p < n/2 and marked[(p-1)/2]:
            p += 2
    
    retArray = [2]
    i = 1
    while i < n/2:
        if not marked[i]:
            retArray.append(i*2+1)
        i += 1

    return retArray

def main():
    with open(sys.argv[1],'r') as f:
        primesRequested = [int(l) for l in f]
        primes = findPrimes(max(primesRequested))
        strPrimes = [str(p) for p in primes]
        for r in primesRequested:
            if r > primes[-1]:
                print ','.join(strPrimes)
            else:
                print ','.join(strPrimes[:next(x[0] for x in enumerate(primes) if x[1] > r-1)])

if __name__ == '__main__':
    main()
